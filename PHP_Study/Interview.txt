1、双引号和单引号的区别

(1)双引号解释变量，单引号不解释变量
(2)双引号里插入单引号，其中单引号里如果有变量的话，变量解释
   ［例］echo "ddd'$t'" . PHP_EOL;
(3)双引号的变量名后面必须要有一个非数字、字母、下划线的特殊字符，或者用{}讲变量括起来，否则会将变量名后面的部分当做一个整体，引起语法错误
   ［例］echo "$t#dd";
(4)双引号解释转义字符，单引号不解释转义字符，但是解释'\和\\
(5)能使单引号字符尽量使用单引号，单引号的效率比双引号要高（因为双引号要先遍历一遍，判断里面有没有变量，然后再进行操作，而单引号则不需要判断）

********************************************************************************************************************************
2、常用的超全局变量(8个)

$_GET ----->get传送方式
$_POST ----->post传送方式
$_REQUEST ----->可以接收到get和post两种方式的值
***
$GLOBALS ----->所有的变量都放在里面
$_FILE ----->上传文件使用
$_SERVER ----->系统环境变量
***
$_SESSION ----->会话控制的时候会用到
$_COOKIE ----->会话控制的时候会用到

********************************************************************************************************************************
3、HTTP中POST、GET、PUT、DELETE方式的区别

   HTTP定义了与服务器交互的不同的方法，最基本的是POST、GET、PUT、DELETE，与其比不可少的URL的全称是资源描述符，
我们可以这样理解：url描述了一个网络上资源，而post、get、put、delegate就是对这个资源进行增、删、改、查的操作！

（3.1）表单中get和post提交方式的区别
   get是把参数数据队列加到提交表单的action属性所指的url中，值和表单内各个字段一一对应，从url中可以看到；
post是通过HTTPPOST机制，将表单内各个字段与其内容防止在HTML的head中一起传送到action属性所指的url地址，用户看不到这个过程

   对于get方式，服务器端用Request.QueryString获取变量的值，对于post方式，服务器端用Request.Form获取提交的数据

   get传送的数据量较小，post传送的数据量较大，一般被默认不受限制，但在理论上，IIS4中最大量为80kb，IIS5中为1000k，get安全性非常低，post安全性较高

（3.2）表单中get, put, post提交方式的区别
   GET请求会向数据库发索取数据的请求，从而来获取信息，该请求就像数据库的select操作一样，只是用来查询一下数据，不会修改、增加数据，不会影响资源的内容，
即该请求不会产生副作用。无论进行多少次操作，结果都是一样的。

   与GET不同的是，PUT请求是向服务器端发送数据的，从而改变信息，该请求就像数据库的update操作一样，用来修改数据的内容，但是不会增加数据的种类等，也就是
说无论进行多少次PUT操作，其结果并没有不同。

   POST请求同PUT请求类似，都是向服务器端发送数据的，但是该请求会改变数据的种类等资源，就像数据库的insert操作一样，会创建新的内容。几乎目前所有的提交操
作都是用POST请求的。

   DELETE请求顾名思义，就是用来删除某一个资源的，该请求就像数据库的delete操作。

********************************************************************************************************************************
4、PHP介绍

Hypertext Preprocessor----超文本预处理器
Personal Home Page 原始名称

目标用途: 允许web开发人员快速编写动态生成的web页面，与其他页面相比，PHP是将程序嵌入到HTML文档中去执行，效率比完全生成HTML编辑的CGI高很多

********************************************************************************************************************************
5、PHP特性:
(1)php独特混合了C,Java,Prel以及PHP自创的语法
(2)可以比CGI或者Prel更快速去执行动态网页，与其他变成语言相比，PHP是讲程序嵌入到HTML文档中去执行，执行效率比完全生成HTML编辑的CGI要高很多，所有的CGI都能
实现
(3)支持几乎所有流行的数据库以及操作系统
(4)PHP可以使用C,C++进行程序的扩展

********************************************************************************************************************************
6、echo、print_r、print、var_dump之间的区别

* echo、print是php语句，var_dump和print_r是函数
* echo 输出一个或多个字符串，中间以逗号隔开，没有返回值是语言结构而不是真正的函数，因此不能作为表达式的一部分使用
* print也是php的一个关键字，有返回值 只能打印出简单类型变量的值(如int，string)，如果字符串显示成功则返回true，否则返回false
* print_r 可以打印出复杂类型变量的值(如数组、对象）以列表的形式显示，并以array、object开头，但print_r输出布尔值和NULL的结果没有意义，因为都是打印"\n"，因此var_dump()函数更适合调试
* var_dump() 判断一个变量的类型和长度，并输出变量的数值

********************************************************************************************************************************
7、HTTP状态码

常见的HTTP状态码：
200 - 请求成功
301 - 资源(网页等)被永久转义到其他URL
404 - 请求的资源(网页等)不存在
505 - 内部服务器错误

HTTP状态码分类:
1** - 信息，服务器收到的请求，需要请求者继续执行操作
2** - 成功，操作被成功接收并处理
3** - 重定向，需要进一步的操作以完成请求
4** - 客户端错误，请求包含语法错误或者无法完成请求
5** - 服务器错误，服务器在处理请求的过程中发生了错误

********************************************************************************************************************************
8、什么是魔术引号

魔术引号是一个将自动将进入PHP脚本的数据进行转义的过程，最好在编码时不要转义而在运行时根据需要而转义

********************************************************************************************************************************
9、如何获取客户端的ip(要求取得一个int)和服务器ip的代码
客户端：$_SERVER["REMOTE_ADDR"];或者getenv('REMOTE_ADDR')
      ip2long进行转换
服务器端：gethostbyname('www.baidu.com')

10、使用那些工具进行版本控制

cvs、svn、vss、git

********************************************************************************************************************************
11、优化数据库的方法

(1)选取最适用的字段属性，尽可能减少定义字段宽度，尽量把字段设置NOTNULL，例如'省份'、'性别'最好适用ENUM
(2)使用连接(JOIN)来代替子查询
(3)适用联合(UNION)来代替手动创建的临时表
(4)事务处理
(5)锁定表、优化事务处理
(6)适用外键，优化锁定表
(7)建立索引
(8)优化查询语句

＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃
注：MySQL数据库优化的八种方式　　　http://www.jianshu.com/p/dac715a88b44

1、选取最适用的字段属性

MySQL可以很好的支持大数据量的存取，但是一般说来，数据库中的表越小，在它上面执行的查询也就会越快。因此，在创建表的时候，为了获得更好的性能，我们可以将表中
字段的宽度设得尽可能小。

例如，在定义邮政编码这个字段时，如果将其设置为CHAR(255),显然给数据库增加了不必要的空间，甚至使用VARCHAR这种类型也是多余的，因为CHAR(6)就可以很好的完
成任务了。同样的，如果可以的话，我们应该使用MEDIUMINT而不是BIGIN来定义整型字段。

另外一个提高效率的方法是在可能的情况下，应该尽量把字段设置为NOT NULL，这样在将来执行查询的时候，数据库不用去比较NULL值。

对于某些文本字段，例如“省份”或者“性别”，我们可以将它们定义为ENUM类型。因为在MySQL中，ENUM类型被当作数值型数据来处理，而数值型数据被处理起来的速度要比文
本类型快得多。这样，我们又可以提高数据库的性能。

2、使用连接（JOIN）来代替子查询(Sub-Queries)

MySQL从4.1开始支持SQL的子查询。这个技术可以使用SELECT语句来创建一个单列的查询结果，然后把这个结果作为过滤条件用在另一个查询中。
例如，我们要将客户基本信息表中没有任何订单的客户删除掉，就可以利用子查询先从销售信息表中将所有发出订单的客户ID取出来，然后将结果传递给主查询，如下所示：
DELETE  FROM  customerinfo
WHERE  CustomerID  NOT  in  (SELECT customerid  FROM  salesinfo)

使用子查询可以一次性的完成很多逻辑上需要多个步骤才能完成的SQL操作，同时也可以避免事务或者表锁死，并且写起来也很容易。但是，有些情况下，子查询可以被更有
效率的连接（JOIN）..替代。例如，假设我们要将所有没有订单记录的用户取出来，可以用下面这个查询完成：
SELECT  *  FROM  customerinfo
WHERE  customerid  NOT IN (SELECT customerid   FROM   salesinfo)

如果使用连接（JOIN）..来完成这个查询工作，速度将会快很多。尤其是当salesinfo表中对CustomerID建有索引的话，性能将会更好，查询如下：
SELECT  *  FROM  customerinfo
LEFT  JOIN  salesinfo  ON   customerinfo.customerid =salesinfo.customerid
WHERE  salesinfo.customerid   IS NULL

连接（JOIN）..之所以更有效率一些，是因为MySQL不需要在内存中创建临时表来完成这个逻辑上的需要两个步骤的查询工作。

3、使用联合(UNION)来代替手动创建的临时表
　　MySQL从4.0的版本开始支持union查询，它可以把需要使用临时表的两条或更多的select查询合并的一个查询中。在客户端的查询会话结束的时候，临时表会被自动删
除，从而保证数据库整齐、高效。使用union来创建查询的时候，我们只需要用UNION作为关键字把多个select语句连接起来就可以了，要注意的是所有select语句中的字
段数目要想同。下面的例子就演示了一个使用UNION的查询。
　　SELECT   name,phone  FROM  client UNION
　　SELECT  name,birthdate  FROM  author  UNION
　　SELECT  name,supplier FROM product

4、事务
　　尽管我们可以使用子查询（Sub-Queries）、连接（JOIN）和联合（UNION）来创建各种各样的查询，但不是所有的数据库操作都可以只用一条或少数几条SQL语句就可
以完成的。更多的时候是需要用到一系列的语句来完成某种工作。但是在这种情况下，当这个语句块中的某一条语句运行出错的时候，整个语句块的操作就会变得不确定起来。
设想一下，要把某个数据同时插入两个相关联的表中，可能会出现这样的情况：第一个表中成功更新后，数据库突然出现意外状况，造成第二个表中的操作没有完成，这样，就
会造成数据的不完整，甚至会破坏数据库中的数据。要避免这种情况，就应该使用事务，它的作用是：要么语句块中每条语句都操作成功，要么都失败。换句话说，就是可以保
持数据库中数据的一致性和完整性。事物以BEGIN关键字开始，COMMIT关键字结束。在这之间的一条SQL操作失败，那么，ROLLBACK命令就可以把数据库恢复到BEGIN开始之
前的状态。

　　BEGIN;
  　　INSERT   INTO   salesinfo   SET   customerid=14;
  　　UPDATE   inventory   SET   quantity =11   WHERE   item='book';
　　COMMIT;

　　事务的另一个重要作用是当多个用户同时使用相同的数据源时，它可以利用锁定数据库的方法来为用户提供一种安全的访问方式，这样可以保证用户的操作不被其它的用户
所干扰。

5、锁定表
　　尽管事务是维护数据库完整性的一个非常好的方法，但却因为它的独占性，有时会影响数据库的性能，尤其是在很大的应用系统中。由于在事务执行的过程中，数据库将会
被锁定，因此其它的用户请求只能暂时等待直到该事务结束。如果一个数据库系统只有少数几个用户来使用，事务造成的影响不会成为一个太大的问题；但假设有成千上万的用
户同时访问一个数据库系统，例如访问一个电子商务网站，就会产生比较严重的响应延迟。

　　其实，有些情况下我们可以通过锁定表的方法来获得更好的性能。下面的例子就用锁定表的方法来完成前面一个例子中事务的功能。
　　LOCK TABLE inventory WRITE SELECT quantity  FROM   inventory   WHERE Item='book';
　　．．．
  　UPDATE   inventory   SET   Quantity=11   WHERE  Item='book';UNLOCKTABLES

　　这里，我们用一个select语句取出初始数据，通过一些计算，用update语句将新值更新到表中。包含有WRITE关键字的LOCKTABLE语句可以保证在UNLOCKTABLES命令
被执行之前，不会有其它的访问来对inventory进行插入、更新或者删除的操作。

6、使用外键
　　锁定表的方法可以维护数据的完整性，但是它却不能保证数据的关联性。这个时候我们就可以使用外键。
　　例如，外键可以保证每一条销售记录都指向某一个存在的客户。在这里，外键可以把customerinfo表中的customerid映射到salesinfo表中customerid，任何一条
没有合法customerid的记录都不会被更新或插入到salesinfo中。

　　CREATE  TABLE   customerinfo( customerid   int primary key) engine = innodb;
　　CREATE  TABLE   salesinfo( salesid int not null,customerid  int not null, primary key(customerid,salesid),foreign key(customerid)  references  customerinfo(customerid) on delete cascade)engine = innodb;

   注意例子中的参数“on delete cascade”。该参数保证当customerinfo表中的一条客户记录被删除的时候，salesinfo表中所有与该客户相关的记录也会被自动删除。
如果要在MySQL中使用外键，一定要记住在创建表的时候将表的类型定义为事务安全表InnoDB类型。该类型不是MySQL表的默认类型。定义的方法是在CREATE TABLE语句中
加上engine=INNODB。如例中所示。

7、使用索引
　　索引是提高数据库性能的常用方法，它可以令数据库服务器以比没有索引快得多的速度检索特定的行，尤其是在查询语句当中包含有MAX(),MIN()和ORDERBY这些命令的
时候，性能提高更为明显。
　　那该对哪些字段建立索引呢？
　　一般说来，索引应建立在那些将用于JOIN,WHERE判断和ORDERBY排序的字段上。尽量不要对数据库中某个含有大量重复的值的字段建立索引。对于一个ENUM类型的字段
来说，出现大量重复值是很有可能的情况
　　例如customerinfo中的“province”..字段，在这样的字段上建立索引将不会有什么帮助；相反，还有可能降低数据库的性能。我们在创建表的时候可以同时创建合适
的索引，也可以使用ALTERTABLE或CREATEINDEX在以后创建索引。此外，MySQL从版本3.23.23开始支持全文索引和搜索。全文索引在MySQL中是一个FULLTEXT类型索引,
但仅能用于MyISAM类型的表。对于一个大的数据库，将数据装载到一个没有FULLTEXT索引的表中，然后再使用ALTERTABLE或CREATEINDEX创建索引，将是非常快的。
但如果将数据装载到一个已经有FULLTEXT索引的表中，执行过程将会非常慢。

8、优化的查询语句

　　绝大多数情况下，使用索引可以提高查询的速度，但如果SQL语句使用不恰当的话，索引将无法发挥它应有的作用。

　　下面是应该注意的几个方面。

　　a、 首先，最好是在相同类型的字段间进行比较的操作
　　在MySQL3.23版之前，这甚至是一个必须的条件。例如不能将一个建有索引的INT字段和BIGINT字段进行比较；但是作为特殊的情况，在CHAR类型的字段和VARCHAR类
型字段的字段大小相同的时候，可以将它们进行比较。

　　b、 其次，在建有索引的字段上尽量不要使用函数进行操作
　　例如，在一个DATE类型的字段上使用YEAE()函数时，将会使索引不能发挥应有的作用。所以，下面的两个查询虽然返回的结果一样，但后者要比前者快得多。

　　ｃ、第三，在搜索字符型字段时，我们有时会使用LIKE关键字和通配符，这种做法虽然简单，但却也是以牺牲系统性能为代价的

　　例如下面的查询将会比较表中的每一条记录。
　　SELECT  *  FROM  books  WHERE  name  like   "MySQL%"
　　但是如果换用下面的查询，返回的结果一样，但速度就要快上很多：
　　SELECT  *  FROM  books  WHERE  name ＞=  "MySQL"  and  name  ＜"MySQM"
　　最后，应该注意避免在查询中让MySQL进行自动类型转换，因为转换过程也会使索引变得不起作用。

********************************************************************************************************************************
12、是否使用过模板引擎？使用的模板引擎的名字是？

Smarty:Smarty算是一种很老的PHP模板引擎了，它曾是我使用这门语言模板的最初选择。虽然它的更新已经不算频繁了，并且缺少新一代模板引擎所具有的部分特性，但是
它仍然值得一看。

********************************************************************************************************************************
13、对于大流量网站，采用什么方法来解决访问量的问题

(1)确认服务器硬件是否能够支持当前的流量
(2)数据库读写分离，优化数据表
(3)程序功能规则，禁止外部的盗链
(4)控制大文件的下载
(5)使用不同主机分流主要流量

********************************************************************************************************************************
14、语句include和require的区别是什么？为避免多次包含同一文件，可以用(?)语句代替他们

require是无条件包含，也就是如果一个流程里加入require，无论条件成立与否都会先执行require，当文件不存在或者无法打开的时候，会提示错误，并且会终止程序执行

include有返回值，而require没有(可能因为如此require的速度比include快)，如果被包含的文件不存在的化，那么会提示一个错误，但是程序会继续执行下去

注意:包含文件不存在或者语法错误的时候require是致命的，而include不是

require_once表示了只包含一次，避免了重复包含

注：　关于include 和 require　的补充内容

PHP中include()与require()的区别说明

require 的使用方法如 require("MyRequireFile.php"); 。这个函数通常放在 PHP 程序的最前面，PHP 程序在执行前，就会先读入 require 所指定引入的文件，
使它变成 PHP 程序网页的一部份。常用的函数，亦可以这个方法将它引入网页中。

include 使用方法如 include("MyIncludeFile.php"); 。这个函数一般是放在流程控制的处理部分中。PHP 程序网页在读到 include 的文件时，才将它读进来。
这种方式，可以把程序执行时的流程简单化。

他们两个的用途是完全一样的，不一定非得哪个放在最前面哪个放在中间。他们最根本的区别在于错误处理的方式不一样。

require一个文件存在错误的话，那么程序就会中断执行了，并显示致命错误

include一个文件存在错误的话，那么程序不会中端，而是继续执行，并显示一个警告错误。

以下为补充：

1. include有返回值，而require没有。

2. include()包括并运行指定文件 在处理失败时include() 产生一个警告,被导入的程序代码都会被执行，而且这些程序在执行的时候会拥有和源文件中呼叫到include()
语句的位置相同的变量范围。你可以导入同一个服务器中的静态页面。

3. include_once()的作用和include()是几乎相同的

唯一的差别在于include_once()会先检查要导入的档案是不是已经在该程序中的其它地方被导入过了，如果有的话就不会再次重复导入（这项功能有时候是很重要的，比方
说要导入的里面宣告了一些你自行定义好的函数，那么如果在同一个程序重复导入这个文件，在第二次导入的时候便会发生错误讯息，因为PHP不允许相同名称的函数被重复宣
告第二次）。

4. require()会将目标文件的内容读入，并且把自己本身代换成这些读入的内容 在处理失败时require() 则导致一个致命错。

   这个读入并且代换的动作是在PHP引擎编译你的程序代码的时候发生的，而不是发生在PHP引擎开始执行编译好的程序代码的时候（PHP 3.0引擎的工作方式是编译一行执行
一行，但是到了PHP 4.0以后就有所改变了，PHP 4.0是先把整个程序代码全部编译完成后，再将这些编译好的程序代码一次执行完毕，在编译的过程中不会执行任何程序代码）。

require()通常来导入静态的内容，而include()则适合用导入动态的程序代码。

5. 如同include_once()，require_once()会先检查目标文件的内容是不是在之前就已经导入过了，如果是的话，便不会再次重复导入同样的内容。

6. require是无条件包含也就是如果一个流程里加入require,无论条件成立与否都会先执行require。
   http://www.kkh86.com/it/php-base/guide-base2-include.html

7. require通常放在PHP程序的最前面，PHP程序在执行前，就会先读入require所指定引入的文件，使它变成PHP程序网页的一部份。常用的函数，亦可以这个方法将它引入网页中。

8. include一般是放在流程控制的处理部分中PHP程序网页在读到include的文件时，才将它读进来。这种方式可以把程序执行时的流程简单化。

********************************************************************************************************************************
15、谈谈mvc的认识

由模型、视图、控制器完成的应用程序，由模型发出要实现的功能到控制器，控制器接收组织功能传递给视图

********************************************************************************************************************************
16、 说明php中传值与传引用的区别，并说明传值什么时候传引用？

变量默认总是传值赋值，那也就是说，当将一个表达式的值赋予一个变量时，整个表达式的值被赋值到目标变量，这意味着：当一个变量的赋予另外一个变量时，改变其中一个
变量的值，将不会影响到另外一个变量

php也提供了另外一种方式给变量赋值：引用赋值。这意味着新的变量简单的__引用__(换言之，成为了其别名或者指向)了原始变量。改动的新的变量将影响到原始变量，反
之亦然。使用引用赋值，简单地将一个&符号加到将要赋值的变量前(源变量)

对象默认是传引用
对于较大是的数据，传引用比较好，这样可以节省内存的开销